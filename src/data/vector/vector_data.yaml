#                                    __   __  __
#                                    \ \ / / / /
#                                     \ V / / /
#                                      \_/  \/
#
#                                    V E C T O R
#                                   Configuration
#
# ------------------------------------------------------------------------------
# Website: https://vector.dev
# Docs: https://vector.dev/docs
# Chat: https://chat.vector.dev
# ------------------------------------------------------------------------------

# Change this to use a non-default directory for Vector data storage:
# data_dir: "/var/lib/vector"
# 数据日志, 只需要把 message 字段下字段提取到最顶层即可. 

# Random Syslog-formatted logs
sources:
  dummy_logs:
    type: "demo_logs"
    format: "syslog"
    interval: 1
  datafile:
    type: "file"
    include: ["/tmp/tmpdata/*.json"]  # "/var/log/**/*.log"
    start_at_beginning: true

# Parse Syslog logs
# See the Vector Remap Language reference for more info: https://vrl.dev
transforms:
  parse_logs:
    type: "remap"
    inputs: ["dummy_logs"]
    source: |
      . = parse_syslog!(string!(.message))

# Print parsed logs to stdout
sinks:
  print:
    type: "console"
    inputs: ["datafile"]  # datafile   parse_logs
    encoding:
      codec: "json"
      json:
        pretty: true

  ossdata:
    type: aws_s3
    inputs:
      - datafile
    bucket: "BUCKNET_NAME"
    timezone: "Asia/Shanghai"
    filename_extension: "json.gz"  # json 文件  json.gz 压缩json文件
    compression: "gzip"
    content_encoding: "gzip"
    content_type: "application/gzip"
    endpoint: "https://BUCKNET_NAME.oss-cn-shanghai.aliyuncs.com/brdedata/" # 记得要尾斜杠，否则会和后面的拼接成一个长字符串文件夹 #"s3://BUCKNET_NAME.oss-cn-shanghai.aliyuncs.com/BUCKNET_NAME/brde/" # "https://BUCKNET_NAME.oss-cn-shanghai.aliyuncs.com/fccdjny123/"  # https://BUCKNET_NAME.oss-cn-shanghai.aliyuncs.com/vector_test/  "BUCKNET_NAME.oss-cn-shanghai.aliyuncs.com/vector_test/"
    region: "oss-cn-shanghai"
    auth:
      access_key_id: "enter your ACCESS_KEY_id"
      secret_access_key: "enter your ACCESS_KEY"
      #region: "oss-cn-shanghai"
    encoding:
      codec: "raw_message"  # json  ## raw_message 只有日志文件内容. json 会包含其他的元信息.
    key_prefix: "date=%F/%H/%M/"  # 这里可以加入机器id作为目录区分.
    batch:
      timeout_secs: 60  # 测试时可以调小这个值，这样可以在对象存储看到生成的文件.
    healthcheck:
        enabled: false

  brdedata_openobserve:
    type: "http"
    inputs: ["datafile"]
    uri: "http://localhost:5080/api/default/brdedata/_json"  # brdedata 是 stream 也就是es中的 documents  # "http://localhost:5080/api/default/default/_json"
    method: "post"
    auth:
      strategy: "basic"
      user: "wanghao@geetest.com"
      password: "enter your password"
    compression: "gzip"
    encoding:
      codec: "json"  # raw_message 会有问题，导致 openobserve 无法 ingest 数据.
      # timestamp_format: "rfc3339"
    healthcheck:
      enabled: true
# Vector's GraphQL API (disabled by default)
# Uncomment to try it out with the `vector top` command or
# in your browser at http://localhost:8686
# api:
#   enabled: true
#   address: "127.0.0.1:8686"
